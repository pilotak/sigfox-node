name: release

on:
  push:
    tags:
      - "v*"

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      
      - name: Prepare
        id: prepare
        run: |
          git fetch --prune --unshallow --tags

          CURRENT_TAG=$(git tag --points-at HEAD)
          echo ::set-output name=version::${CURRENT_TAG//v}

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.7"

      - name: Install ARM GCC
        run: |
          wget -nv https://developer.arm.com/-/media/Files/downloads/gnu-rm/9-2019q4/gcc-arm-none-eabi-9-2019-q4-major-x86_64-linux.tar.bz2
          sudo tar -C /bin/ -xjf gcc-arm-none-eabi-9-2019-q4-major-x86_64-linux.tar.bz2
          echo "MBED_GCC_ARM_PATH=/bin/gcc-arm-none-eabi-9-2019-q4-major/bin/" >> $GITHUB_ENV

      - name: Install Mbed
        run: |
          python -m pip install --upgrade pip
          pip install mbed-cli
          mkdir 

      - name: Install dependencies
        run: |
          mbed deploy

      - name: Build main
        if: success()
        run: |
          mbed compile -t GCC_ARM -m SIGFOX_TEMP_V1 --profile release
          mv ./BUILD/GCC_ARM-RELEASE/sigfox-th-sensor.bin ./assets/main.bin

      - name: Build main - verbose
        if: success()
        run: |
          mbed compile -t GCC_ARM -m SIGFOX_TEMP_V1
          mv ./BUILD/GCC_ARM/sigfox-th-sensor.bin ./assets/main_verbose.bin

      - name: Create release
        if: ${{ success() && steps.prepare.outputs.version != null }}
        run: |
          set -x
          assets=()

          for path in ./assets; do
            assets+=("-a" "${path}")
          done

          echo "FW ${{ steps.prepare.outputs.version }}" >"CHANGELOG.md"
          echo "" >>"CHANGELOG.md"
          echo "## :bookmark_tabs: Changes" >>"CHANGELOG.md"
          git log --pretty=format:"- %s %H%n" $(git describe --abbrev=0 --tags $(git describe --tags --abbrev=0)^)...$(git describe --tags --abbrev=0) >>"CHANGELOG.md"

          cat "CHANGELOG.md"

          hub release create "${assets[@]}" "--file" "CHANGELOG.md" "$(git tag --points-at HEAD)"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
